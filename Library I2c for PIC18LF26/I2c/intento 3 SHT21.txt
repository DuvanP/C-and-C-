//-----------------------------------------------------Rutina para el SHT21
		
	Delay10KTCYx(8);				//tiempo necesario (20ms) para que el sensor se prenda y este listo para la operacion						
									


	SSP2CON2bits.SEN = 1;
	while(SSP2CON2bits.SEN == 0){}	    //COndicion de STAR

	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3
 
//---------- Envió la condicion STAR ---



	WriteI2C2(0x80);				// Se escribe la direccion del SHT21 y el bit 0 en 0 para escritura

	while(SSP2CON2bits.ACKSTAT) {}	// espera el ACK

	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3

//----------- Envió El Byte de direccion para Escritura--

	WriteI2C2(0xE3);				// escribe Un comando de medicion de humedad  en modo HOLD MASTER
	
	while(SSP2CON2bits.ACKSTAT){} 	// espera el ACK
	
	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3

//----------- Envió El Byte de Comando---

	SSP2CON2bits.RSEN = 1;
	while(SSP2CON2bits.RSEN){}	    // vuelve  a enviar la COndicion de reSTAR

	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3

//----------- Envió Condicion de RESTART

	WriteI2C2(0x81);				// escribe La direccion de SHT21 y el bit en 0 en 1 para lectura

	while(SSP2CON2bits.ACKSTAT){} 	// espera el ACK

	
//----------- Envió El byte de direccion para lectura

	Delay10KTCYx(36);				// espera 90ms para el proceso de la medicion

	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3


	SSP2CON2bits.RCEN = 1;			// HABILITA LA RECEPCION


	while (PIR3bits.SSP2IF == 0){}	// Espera a que el sensor envie la informacion testeando la badndera del buffer


	SSP2CON2bits.ACKDT = 0;
	SSP2CON2bits.ACKEN = 1;			// inicia  la condicion de ACK hacia el SHT21

	while (PIR3bits.SSP2IF == 0){}	// Espera a que el sensor envie la informacion testeando la badndera del buffer
	
	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3 - ACA ESTUVO EL ERROR

//----------- Habilita la recepcion y espera que la recepcion finalice

	D_1 = SSP2BUF; 					// Lee el dato MSB de la medición del Buffer
	
	SSP2STATbits.BF = LATBbits.LATB4;

//----------- Lee lo que esta en el buffer y lo guarda

	Delay10KTCYx(2);				// espera 5ms para el envio del siguiente byte	

		

	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3 - ACA ESTUVO EL ERROR	



	SSP2CON2bits.RCEN = 1;			// HABILITA LA RECEPCION


	while (PIR3bits.SSP2IF == 0){}	// Espera a que el sensor envie la informacion testeando la badndera del buffer

	D_2 = SSP2BUF; 					// Lee el dato MSB de la medición del Buffer

	SSP2CON2bits.ACKDT = 0;
	SSP2CON2bits.ACKEN = 1;			// inicia  la condicion de ACK hacia el SHT21

	while (PIR3bits.SSP2IF == 0){}	// Espera a que el sensor envie la informacion testeando la badndera del buffer
	
	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3 - ACA ESTUVO EL ERROR

//----------- Habilita la recepcion y espera que la recepcion finalice


	
	SSP2STATbits.BF = LATBbits.LATB4;

//----------- Lee lo que esta en el buffer y lo guarda





	Delay10KTCYx(2);				// espera 5ms para el envio del siguiente byte


		
	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3 - ACA ESTUVO EL ERROR	


	SSP2CON2bits.RCEN = 1;			// HABILITA LA RECEPCION


	while (PIR3bits.SSP2IF == 0){}	// Espera a que el sensor envie la informacion testeando la badndera del buffer


	SSP2CON2bits.ACKDT = 1;
	SSP2CON2bits.ACKEN = 1;			// inicia  la condicion de NOTACK hacia el SHT21

	while (PIR3bits.SSP2IF == 0){}	// Espera a que el sensor envie la informacion testeando la badndera del buffer
	
	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3 - ACA ESTUVO EL ERROR

	Delay10KTCYx(2);				// espera 5ms para que SHT21 reconozca el NOTACK

	SSP2CON2bits.PEN = 1;			// Inicia la condicion de STOP
	while (PIR3bits.SSP2IF == 0){}	

	PIR3bits.SSP2IF = 0;			// borra la bandera IF del PIR3

//----------- Habilita la recepcion y espera que la recepcion finalice

	D_3 = SSP2BUF; 					// Lee el dato cheksum de la medición del Buffer
	
	SSP2STATbits.BF = LATBbits.LATB4;

//----------- Lee lo que esta en el buffer y lo guarda